时间 ：2021年3月3日
地点：创客大厦
公链开发：
① 先构建一个区块 --->block
    a、区块的定义
    b、创世区块和新区块生成的功能封装
    c、计算区块哈希值计算
    d、寻找符合条件的Nonce值
            共识机制：多节点解决分歧的规则、方法
            解决方法：PoW 、PoS 、DPoS 、PBft、PuA...

            PoW算法：给定一个系统目标值，寻找随机数、计算区块hash，
                        将hash与系统目标值进行比较

② 生成多个区块
③ 把多个区块链接起来 ---> blockchain
    a、管理员手动管理区块
    b、封装一个具有区块管理功能的模块，它应该有自动化生产、追加、查询、获取区块的能力

④ 把区块链保存起来
         （序列化）
    a、把已有的内存中的多个区块持久化存储起来 --->json、xml、gob（[]byte）
    b、[]byte -->读写（IO）-->持久化媒介：云、文件、数据库
            文件： Write、Read （IO.Writer 、IO.Reader ）
                a、原生API （Application Programming Interface）：os.OpenFile /  os.Open  Write写数据 Reader读数据
                优点：最原始、最底层的技术支持
                缺点：易用性低

                b、第三方SDK（Software Development Kit）：boltDB
                优点：效率高、封装性好
                缺点：仅提供某些特定方向的技术支持
                用法： 先搞明白第三方库的功能和使用步骤：
                bolt.Open -> db.View 、db.Updata ->tx.CreateBucket -->put、get
                       将第三方库集成到已有的项目中
                            1、在项目中新建db模块、封装持久化存储功能
                            a、将内存中的数据存储到文件中
                            b、从文件中读取数据到内存
                 优点：思路简单，容易想到
                 弊端：要保证文件中的数据与内存中的切片数据一致，增加了维护成本，避免数据混乱
                        2、分析：区块中的数据最终目的地是文件，即内存中的Block[]数据是一个


⑤ 多个节点进行数据同步

2021年3月10日14:59:16
引入迭代器 BlockChain中添加IteratorBlockHash属性
    ① IteratorBlockHash初始值为lastBlockHash
迭代器(iterator):一种检查容器内元素并遍历元素的数据类型。
又称游标cursor，是一种设计模式，它是一个对象，用可以遍历选择序列中的对象。
通过它，开发者可以不需要了解该序列的底层结构

2021年3月10日16:11:44
 src ————> build ————>run
    XianFengChain04.exe -————>AddNewBlock(用户输入的数据)

动态交互：机器与人交互：程序将相关新输出给用户
         人与机器交互：用户动态指定一些程序执行的数据，程序能够接收并解析，按照用户的指令进行执行。
 golang命令行参数：
        实例：git commit -m "xxxx"
          思路: go run main.go createBlock <data>
          方案一 ： os.Args : 一个切片，该切片至少有一个元素，存放程序的路径。
          方案二 ： flag.Args: flag.StringVar()/flag.String / flag.Int / flag.IntVar
                       flag.NewFlagSet()
                    flag.Parse()

2021年3月10日17:07:59
 类比样例 go
        bug         start a bug report
        build       compile packages and dependencies
        version     print Go version
        vet         report likely mistakes in packages
        统计已实现的功能：
        1、generategensis 生成创世区块 -gensis 创世区块中的数据
        2、generateblock  生成新区块  -data  新区块中的数据
        3、getlastblock   获取最新区块
        4、getallblocks   获取所有区块
        go run main.go generategensis -
2021年3月11日09:38:46
继承命令行参数解析功能：
    1、新建一个模块client
    2、在client模块中新建各个指令功能函数

2021年3月12日10:30:28
    UTXO：未花费的交易输出

    交易：转账，比特币在两个或多个地址的一次流转
    交易：交易输入，交易输出
                一笔交易可以由一个或多个交易输入，和一个或多个交易输出组成
            交易输入：本质上是对某笔交易的某个交易输出的一个引用
            交易输出：通过一个数据结构，将一定数量的比特币通过锁定脚本锁定在该结构上，等待解锁脚本解锁。
